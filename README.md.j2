
<table style="width:100%">
  <tr>
    <td colspan=2><strong>
    k3d-faas
      </strong>&nbsp;&nbsp;&nbsp;&nbsp;
    </td>
  </tr>
  <tr>
    <td width=15%><img src=img/icon.png style="width:150px"></td>
    <td>
      Laboratory for working with Functions as a Service on kubernetes
      <br/><br/>
      {%for action in github.actions%}<a href="{{action.url}}"><img src="{{action.url}}/badge.svg"></a>{%endfor%}
    </td>
  </tr>
</table>

-------------------------------------------------------------

{{markdown_toc(__template__, level=4)}}

-------------------------------------------------------------

## Overview

A self-contained, batteries-included environment / workbench for prototyping Functions-as-a-Service stuff on Kubernetes.  

* Uses [k3d](http://k3d.io) for project-local clusters (no existing cluster required)
* Uses [k8s-tools](https://github.com/elo-enterprises/k8s-tools) for [project automation](Makefile)
* Multiple backends for easy experimentation
    * [Fission](https://fission.io/docs)
    * [Knative-Events](https://knative.dev/docs)
    * [Argo-Events](#)

**Besides a localhost-friendly cluster, there are no build dependencies at all except for docker.**  All of k3d/helm/kubectl & knative/argo/fission CLIs use independently versioned containers, starting with the alpine-k8s base.  The entire stack in this repository is exercised by tests with github actions, and should work anywhere else that is configured for docker-in-docker support.

**This is intended to be a solid reference architecture for cluster-bootstrapping**, but it's mainly for experiments/benchmarking and isn't exactly what you would call production-ready.  But it's a good start for further iteration, because it's easy to yank out the components you don't need and customize the ones you want to keep.  

* **To point this automation at an existing cluster,** just disable the k3d bootstrap and use a different KUBECONFIG.
* **Keeping the from-scratch cluster build but switching the backend from k3d to something like EKS** should also be fairly straightforward.  
* **Event-sourcing from something like SQS takes more signficant effort,** but hopefully the automation layout makes it clear how to get started.

-------------------------------------------------------------

## Features

* Bundles Fission, Knative, Argo & OpenWhisk CLI tools.  
    * You can use those CLIs with the local deployments infrastructure, or against existing deployments.
* E2E demo for basic Fission infrastructure & application deployment
* E2E demo for basic Knative infrastructure deployment *(app coming soon)*

* E2E demo for basic Argo infrastructure deployment *(app coming soon)*

-------------------------------------------------------------

## Quick Start

### Clone/Build/Test This Repo

```bash
# for ssh
$ git clone {{github.repo_ssh_url}}

# or for http
$ git clone {{github.repo_url}}

# teardown, setup, and exercise the entire stack
$ make clean bootstrap deploy test

# piecewise setup / teardown for infrastructure and apps
$ make knative_infra.teardown knative_infra.setup
$ make argo.teardown argo.setup
$ make fission_infra.teardown fission_infra.setup

# test infrastructure components piecewise
make fission_infra.test
make knative_infra.test
make argo_infra.test

# test application components piecewise
make fission_app.test
make knative_app.test
make argo_app.test
```

-------------------------------------------------------------

# References

1. https://argoproj.github.io/argo-events/installation/
1. <https://danquack.dev/blog/creating-faas-in-k8s-with-argo-events>

-------------------------------------------------------------

# Known Limitations and Issues

1. Placeholder
1. Placeholder
1. Placeholder

